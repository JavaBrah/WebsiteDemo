# Generated by Django 5.2.3 on 2025-08-19 13:50

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StateData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_code', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, unique=True)),
                ('state_name', models.CharField(max_length=50)),
                ('cost_of_living_index', models.FloatField(help_text='100 = national average', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)])),
                ('housing_index', models.FloatField(help_text='Housing cost index relative to national average', validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(300)])),
                ('utilities_index', models.FloatField(help_text='Utilities cost index relative to national average', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)])),
                ('grocery_index', models.FloatField(help_text='Grocery cost index relative to national average', validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(150)])),
                ('transportation_index', models.FloatField(help_text='Transportation cost index relative to national average', validators=[django.core.validators.MinValueValidator(70), django.core.validators.MaxValueValidator(150)])),
                ('state_income_tax_min', models.FloatField(help_text='Minimum state income tax rate as percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('state_income_tax_max', models.FloatField(help_text='Maximum state income tax rate as percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('sales_tax_rate', models.FloatField(help_text='State sales tax rate as percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)])),
                ('property_tax_rate', models.FloatField(help_text='Effective property tax rate as percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('data_source', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'State Data',
                'verbose_name_plural': 'State Data',
                'ordering': ['state_name'],
            },
        ),
        migrations.CreateModel(
            name='VeteranBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_tax_exemption', models.BooleanField(default=False)),
                ('property_tax_exemption_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum property tax exemption amount', max_digits=10, null=True)),
                ('military_retirement_exempt', models.BooleanField(default=False, help_text='Military retirement income exempt from state income tax')),
                ('disability_compensation_exempt', models.BooleanField(default=True, help_text='VA disability compensation exempt from state income tax')),
                ('vehicle_registration_discount', models.BooleanField(default=False)),
                ('hunting_fishing_license_free', models.BooleanField(default=False)),
                ('homestead_exemption', models.DecimalField(blank=True, decimal_places=2, help_text='Homestead property tax exemption amount', max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about veteran benefits')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('state', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='veteran_benefits', to='state_data.statedata')),
            ],
            options={
                'verbose_name': 'Veteran Benefit',
                'verbose_name_plural': 'Veteran Benefits',
            },
        ),
    ]
